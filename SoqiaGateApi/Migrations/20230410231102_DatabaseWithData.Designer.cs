// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoqiaGateApi.DbContexts;

#nullable disable

namespace SoqiaGateApi.Migrations
{
    [DbContext(typeof(CustomerInfoContext))]
    [Migration("20230410231102_DatabaseWithData")]
    partial class DatabaseWithData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoqiaGateApi.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FamilySize")
                        .HasColumnType("int");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GrandfatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("POBox")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "john.doe@example.com",
                            FamilySize = 3,
                            FatherName = "Doe",
                            FirstName = "John",
                            GrandfatherName = "Johnson",
                            LastName = "Smith",
                            MobileNumber = "555-5678",
                            NationalId = "1234567890",
                            POBox = "1234",
                            PhoneNumber = "555-1234",
                            PostalCode = "10001"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "jane.doe@example.com",
                            FamilySize = 4,
                            FatherName = "Doe",
                            FirstName = "Jane",
                            GrandfatherName = "Smith",
                            LastName = "Johnson",
                            MobileNumber = "555-8765",
                            NationalId = "0987654321",
                            POBox = "5678",
                            PhoneNumber = "555-4321",
                            PostalCode = "10002"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "bob.smith@example.com",
                            FamilySize = 2,
                            FatherName = "Smith",
                            FirstName = "Bob",
                            GrandfatherName = "Doe",
                            LastName = "Johnson",
                            MobileNumber = "555-1357",
                            NationalId = "1357924680",
                            POBox = "9012",
                            PhoneNumber = "555-2468",
                            PostalCode = "10003"
                        });
                });

            modelBuilder.Entity("SoqiaGateApi.Entities.CustomerHouse", b =>
                {
                    b.Property<int>("CustomerHouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerHouseId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingArea")
                        .HasColumnType("float");

                    b.Property<int>("ConnectionNumber")
                        .HasColumnType("int");

                    b.Property<string>("Coordinates")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ElectricitySubscriptionNumber")
                        .HasColumnType("int");

                    b.Property<double>("LandArea")
                        .HasColumnType("float");

                    b.Property<int>("LandNumber")
                        .HasColumnType("int");

                    b.Property<int>("PlotNumber")
                        .HasColumnType("int");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerHouseId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerHouses");

                    b.HasData(
                        new
                        {
                            CustomerHouseId = 1,
                            Address = "123 Main St",
                            BuildingArea = 150.19999999999999,
                            ConnectionNumber = 789,
                            Coordinates = "40.7128,-74.0060",
                            CustomerId = 1,
                            ElectricitySubscriptionNumber = 101112,
                            LandArea = 250.5,
                            LandNumber = 456,
                            PlotNumber = 123,
                            PropertyType = "Residential",
                            RequestType = "new"
                        },
                        new
                        {
                            CustomerHouseId = 2,
                            Address = "456 Broadway",
                            BuildingArea = 300.80000000000001,
                            ConnectionNumber = 101,
                            Coordinates = "40.7214,-74.0052",
                            CustomerId = 2,
                            ElectricitySubscriptionNumber = 131415,
                            LandArea = 450.19999999999999,
                            LandNumber = 789,
                            PlotNumber = 456,
                            PropertyType = "Commercial",
                            RequestType = "new"
                        },
                        new
                        {
                            CustomerHouseId = 3,
                            Address = "789 Elm St",
                            BuildingArea = 200.5,
                            ConnectionNumber = 161,
                            Coordinates = "40.7069,-73.9969",
                            CustomerId = 3,
                            ElectricitySubscriptionNumber = 161718,
                            LandArea = 300.0,
                            LandNumber = 123,
                            PlotNumber = 789,
                            PropertyType = "Residential",
                            RequestType = "Upgrade"
                        });
                });

            modelBuilder.Entity("SoqiaGateApi.Entities.WaterOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("WaterOrders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ContactNumber = "555-1234",
                            CustomerId = 1,
                            DeliveryAddress = "123 Main St",
                            OrderDate = new DateTime(2023, 4, 10, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Status = 0
                        },
                        new
                        {
                            OrderId = 2,
                            ContactNumber = "555-5678",
                            CustomerId = 2,
                            DeliveryAddress = "456 Broadway",
                            OrderDate = new DateTime(2023, 4, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1
                        },
                        new
                        {
                            OrderId = 3,
                            ContactNumber = "555-9012",
                            CustomerId = 3,
                            DeliveryAddress = "789 Elm St",
                            OrderDate = new DateTime(2023, 4, 8, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            Status = 2
                        });
                });

            modelBuilder.Entity("SoqiaGateApi.Entities.CustomerHouse", b =>
                {
                    b.HasOne("SoqiaGateApi.Entities.Customer", "Customer")
                        .WithMany("House")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SoqiaGateApi.Entities.WaterOrder", b =>
                {
                    b.HasOne("SoqiaGateApi.Entities.Customer", "Customer")
                        .WithMany("WaterOrders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SoqiaGateApi.Entities.Customer", b =>
                {
                    b.Navigation("House");

                    b.Navigation("WaterOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
